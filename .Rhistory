df <- load("C:/Users/Admin/Documents/GitHub/fivethirtyeight/data/college_all_ages.rda")
college_all_ages
df
#OK, THAT WAS THE RIGHT COMMAND TO ASSIGN "COLLEGE_ALL_AGES" TO THE DATA FRAME "df". USE THIS CODE FOR THE HOMEWORK MARKDOWN FILE
summary (college_all_ages)
str (college_all_ages)
head (college_all_ages)
remotes::install_github("rudeboybert/fivethirtyeight", build_vignettes = TRUE)
install.packages("fivethirtyeight")
install.packages("stringi")
install.packages("plotly")
install.packages(c("remotes::install_github("rudeboybert/fivethirtyeight"", "build_vignettes", "=", "TRUE)"))
install.packages (install_github("rudeboybert/fivethirtyeight", build_vignettes = TRUE)
install.packages (install_github("rudeboybert/fivethirtyeight", build_vignettes = TRUE))
install.packages ("rudeboybert/fivethirtyeight", build_vignettes = TRUE)
library("fivethirtyeight", lib.loc="~/R/win-library/3.5")
browseVignettes (package = "fivethirtyeight")
browseVignettes (package = "fivethirtyeight")
head (df)
str (df)
df <- load("C:/Users/Admin/Documents/GitHub/fivethirtyeight/data/college_all_ages.rda")
df
college_all_ages
df
summary (college_all_ages)
head (college_all_ages)
col (college_all_ages, as_factor = FALSE)
col (college_all_ages, as.factor = FALSE)
head (college_all_ages, 1)
dim.data.frame (df)
head (df)
str(df)
dim (college_all_ages)
str (college_all_ages)
df <- data.frame(college_all_ages)
str (df)
# To see a more detailed list of all data sets, see the package vignette
:
vignette("fivethirtyeight", package = "fivethirtyeight")
head (df)
save.image("~/R/R Default Working Folder/Homework_4/.RData")
head (df, 1)
head (df, 0)
colnames (df)
College_Column_Names <- c(colnames(df))
College_Column_Names
length (College_Column_Names)
length (College_Column_Names)
# To see a more detailed list of all data sets, see the package vignette:#(( Error: unexpected ':' in ":" > vignette("fivethirtyeight", package = "fivethirtyeight")
# To see a more detailed list of all data sets, see the package vignette
:
vignette("fivethirtyeight", package = "fivethirtyeight")
#It looks like this threw an error because of the way I wrote the comment originally. The extra ":" makes R want to run the code, which it shouldn't. I thought the "#" would block that. It looks like the ":" somehow removes the effect of the "#". I will have to find out for future knowledge.
vignette ("fivethirtyeight", package = "fivethirtyeight")
ls()
#The command which gave me a vector of the column names in df was "Colllege_Column_Names<-c(colnames(df))"
#Used "length (College_Column_Names)" to get the number of column names
# Homework question 1d The command which gave me a vector of the column names in df was "Colllege_Column_Names<-c(colnames(df))"
# Homework question 1d Used "length (College_Column_Names)" to get the number of column names
# Homework question 2A: The command which gave me a vector of the column names in df was "Colllege_Column_Names<-c(colnames(df))", then use college_Column_Names to list the names
# Homework question 2A: use "length (College_Column_Names)" to get number of columns
?unique
###The next few lines investigate what the "unique" function does
x <- c(c:5, 11:8, 8 + 0:5)
x <- c(3:5, 11:8, 8 + 0:5)
ux <- unique (x)
ux <- unique (x, fromLast = TRUE)
stopifnot (identical(sort(ux), sort (u2)))
ux <- unique (x)
u2 <- unique (x, fromLast = TRUE)
stopifnot (identical(sort(ux), sort (u2)))
x
ux
stopifnot()
stopifnot
stopifnot(x)
stopifnot(ux)
stopifnot (identical(sort(ux), sort (u2)))
identical(sort(ux), sort (u2))
head (df)
unique (df$major_category)
Maj_Cat_Count <- data.frame (unique(df$major_category))
Maj_Cat_Count
#
Let's say I have the following data frame:
> myvec
name order_no
1    Amy       12
2   Jack       14
3   Jack       16
4   Dave       11
5    Amy       12
6   Jack       16
7    Tom       19
8  Larry       22
9    Tom       19
10  Dave       11
11  Jack       17
12   Tom       20
13   Amy       23
14  Jack       16
# From Stack Overflow: I want to count the number of distinct order_no values for each name.ddply(myvec,~name,summarise,number_of_distinct_orders=length(unique(order_no)))
# Answer from Stack Overflow: ddply(myvec,~name,summarise,number_of_distinct_orders=length(unique(order_no)))
library("dplyr", lib.loc="~/R/win-library/3.5")
library("plyr", lib.loc="~/R/win-library/3.5")
?ddply
Maj_Cat_Freq <- ddply (df, .(major_category), summarize, length(unique(major_category)))
Maj_Cat_Freq
#this doesn't give the number of entries within major_category
ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
#Same problem
#My practice to see what might be wrong
my_order_vector <- c(names("Amy", "Jack", "Jack", "Dave", "Amy", "Jack", "Tom", "Larry", "Tom", "Dave", "Jack", "Tom", "Amy", "Jack"), order_number(12, 14, 16, 11, 12, 16, 19, 22, 19, 11, 17, 20, 23, 16))
names_order <- c("Amy", "Jack", "Jack", "Dave", "Amy", "Jack", "Tom", "Larry", "Tom", "Dave", "Jack", "Tom", "Amy", "Jack")
my_order_vector <- c(12, 14, 16, 11, 12, 16, 19, 22, 19, 11, 17, 20, 23, 16)
?rename
names <- rename(names_order)
my_vector <- c(names_order, )my_order_vector)
my_vector <- c(names_order, my_order_vector)
my_vector
rename (my_vector, c("names_order" = "names"))
names_order
my_order_dataframe <-
?data.frame()
my_df <- data.frame (x="names_order", y="my_order_vector")
my_df
my_df <- data.frame (x=names_order, y=my_order_vector)
my_df
"x" = "Names"
"y" = "Orders"
my_df
rename (my_df$x = my_df$Names)
rename (my_df$x , my_df$Names)
rename (my_df$y my_df$Orders)
rename (my_df$y, my_df$Orders)
my_df
ddply(my_df,~x,summarise,number_of_distinct_orders=length(unique(y)))
ddply(my_df,summarise,number_of_distinct_orders=length(unique(y)))
##OK. Stop practicing and try again to apply to problem
ddply (df, ~major.category, summarize, major_cat_freq=length(unique(major.cat)))
ddply (df, df$major.category, summarize, major_cat_freq=length(unique(major.cat)))
ddply (df, df$major.category, summarize, major_cat_freq=length(unique(df$major.cat)))
ddply (df, ~df$major.category, summarize, major_cat_freq=length(unique(df$major.cat)))
ddply (df, .df$major.category, summarize, major_cat_freq=length(unique(df$major.cat)))
ddply (df, ~(df$major.category), summarize, major_cat_freq=length(unique(df$major.cat)))
ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
ddply (df, ~.(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
ddply (df, .(major), summarise, Maj_Cat_Freq = length (unique(major_category)))
df
str (df)
head (df, 3)
major_cat_freq <- ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
major_cat_freq
major_cat_freq <- ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (!unique(major_category)))
?uniqueN
??uniqueN
## Another Stack Overflow answer -- choices <- length(unique(iris$Species))
major_cat_freq <- length(unique(df$major_category))
major_cat_freq
##So this solution from Stack Overflow also gives wrong solution. I don't get the number per major category, just the number of major categories.
major_cat_freq <- ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
major_cat_freq
unique(major_category)
unique(df$major_category)
Maj_Cat_Freq = length (unique(major_category))
Maj_Cat_Freq = length (unique(df$major_category))
major_cat_freq
ddply (df, .(major_category), summarise, Maj_Cat_Freq = length (unique(major_category)))
major_cat_freq <- ddply (df, ~major_category, summarise, Maj_Cat_Freq = length (unique(major_category)))
major_cat_freq
major_cat_freq <- ddply (df, .(major_category), summarise, length (unique(major_category)))
install.packages("regexSelect")
install.packages("regexPipes")
grep(df$major_category, Arts, ignore.case = TRUE, value = FALSE )
grep(df$major_category, "Arts", ignore.case = TRUE, value = FALSE )
abc <- grep(df$major_category, "Arts", ignore.case = TRUE, value = FALSE )
abc
abc <- grep(df$major_category, "Arts", ignore.case = TRUE, value = FALSE, fixed = TRUE )
abc
major_cat_freq <- ddply (df, .(major_category), summarise, length (unique(major_category)))
major_cat_freq <- length (unique(major_category)))
major_cat_freq <- length (unique(major_category)
)
major_cat_freq <- length (unique(df$major_category))
major_cat_freq
major_cat_freq <-  (summarise, length (unique(df$major_category))
major_cat_freq <-  (summarise (length (unique(df$major_category)))
)
major_cat_freq <- ddply (df, ~ .(major_category), summarise, length (unique(major_category)))
?atomic
major_cat_freq <- count (df, df$major_category)
major_cat_freq <- count (df, "major_category")
major_cat_freq
###THIS IS A RIDICULOUSLY SIMPLY SOLUTION. WHY DID IT TAKE ALL THAT SEARCHING TO FIND IT?
library("fivethirtyeight", lib.loc="~/R/win-library/3.5")
library("ggplot2", lib.loc="~/R/win-library/3.5")
library("knitr", lib.loc="~/R/win-library/3.5")
library("markdown", lib.loc="~/R/win-library/3.5")
library("rmarkdown", lib.loc="~/R/win-library/3.5")
df <- load("C:/Users/Admin/Documents/GitHub/fivethirtyeight/data/college_all_ages.rda")
setwd("~/R/R Default Working Folder/Homework_4")
college_all_ages
head (college_all_ages, 4)
head (df, 4)
df
df <- load("C:/Users/Admin/Documents/GitHub/fivethirtyeight/data/college_all_ages.rda")
college_all_ages
df
remotes::install_github("rudeboybert/fivethirtyeight", build_vignettes = TRUE)
install.packages("fivethirtyeight")
install.packages("stringi")
install.packages("plotly")
install.packages(c("remotes::install_github("rudeboybert/fivethirtyeight"", "build_vignettes", "=", "TRUE)"))
install.packages ("rudeboybert/fivethirtyeight", build_vignettes = TRUE)
browseVignettes (package = "fivethirtyeight")
College_Column_Names <- c(colnames(df))
College_Column_Names
length (College_Column_Names)
colnames (df)
summary (college_all_ages)
head (college_all_ages)
col (college_all_ages, as_factor = FALSE)
col (college_all_ages, as.factor = FALSE)
head (college_all_ages, 1)
dim.data.frame (df)
head (df)
str(df)
dim (college_all_ages)
str (college_all_ages)
df <- data.frame(college_all_ages)
str (df)
head (df, 1)
head (df, 0)
colnames (df)
College_Column_Names <- c(colnames(df))
College_Column_Names
dim(college_all_ages)
head (college_all_ages, 0)
head (college_all_ages, 1)
College_Column_Names <- c(colnames(df))
College_Column_Names
length (College_Column_Names)
Maj_Cat_Count <- data.frame (unique(df$major_category))
Maj_Cat_Count
library("dplyr", lib.loc="~/R/win-library/3.5")
major_cat_freq <- count (df, df$major_category)
major_cat_freq <- count (df, "major_category")
major_cat_freq
major_cat_freq <- ddply (df, .(major_category), summarise, length (unique(major_category)))
?ddply
library("plyr", lib.loc="~/R/win-library/3.5")
major_cat_freq <- ddply (df, .(major_category), summarise, length (unique(major_category)))
major_cat_freq
major_cat_freq <- ddply (df, ~ .(major_category), summarise, length (unique(major_category)))
major_cat_freq <- count (df, df$major_category)
major_cat_freq <- count (df, "major_category")
major_cat_freq
rm (major_cat_freq)
major_cat_freq <- count (df, "major_category")
major_cat_freq
major_count <- data.frame (major_cat_freq)
major_count
major_count <- count (df, "major_category")
major_count
library("ggplot2", lib.loc="~/R/win-library/3.5")
library("rmarkdown", lib.loc="~/R/win-library/3.5")
library("markdown", lib.loc="~/R/win-library/3.5")
library("fivethirtyeight", lib.loc="~/R/win-library/3.5")
library("RColorBrewer", lib.loc="~/R/win-library/3.5")
par(las=2)
barplot (major_count)
?barplot
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = black, names.arg = major_count$major_category, inside = TRUE)
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, inside = TRUE)
?col
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors", sub = "The categories of majors and the number of programs of under each in the "College_All_Ages" data set found in "fivethirtyeight"")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors", sub = "Categories of majors and the number of programs under each in the "College_All_Ages" data set found in "fivethirtyeight"")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors", sub = "Categories of majors")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Distinct Programs", xlab = "Number of Programs per Major Category")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Distinct Programs", xlab = "Number of Programs per Major Category", xlim = 0,30)
?xlim
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Distinct Programs", xlab = "Number of Programs per Major Category", xlim = (0,30))
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", xlab = "Number of Programs per Major Category", xlim = (0,30))
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Distinct Programs", xlab = "Number of Programs per Major Category")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Distinct Programs", xlab = "Number per Major Category")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Major by Categories", sub = "Number per Major Category", xlab = "Distinct Programs")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = (0, 30))
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = TRUE)
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = 30)
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = "30")
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = range(pretty(c(0, dat))))
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Distinct Majors", xlim = range(pretty(c(0, major_count$freq))))
barplot (major_count$freq, beside = TRUE, horiz = TRUE, col = blues9, border = "black", names.arg = major_count$major_category, main = "Unique College Majors by Discipline", sub = "Number per Discipline", xlab = "Individual Majors", xlim = range(pretty(c(0, major_count$freq))))
?write.csv
?write.csv
write.csv (college_all_ages, file = "College 538 Data", append = FALSE, sep = ",", eol = "/r/n", row.names = FALSE, col.names = FALSE)
write.csv (college_all_ages, file = "College 538 Data", sep = ",", eol = "/r/n", row.names = FALSE, col.names = FALSE)
write.csv (college_all_ages, file = "College 538 Data", eol = "/r/n", row.names = FALSE)
write.csv (college_all_ages, file = "College 538 Data.csv", eol = "/r/n", row.names = FALSE)
write.csv (college_all_ages, file = "College 538 Data.csv", row.names = FALSE)
install.packages("remotes")
library("remotes", lib.loc="~/R/win-library/3.5")
library("stringi", lib.loc="~/R/win-library/3.5")
install.packages("stringi")
